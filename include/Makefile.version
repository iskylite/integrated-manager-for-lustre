space :=
space +=
SCM_COMMIT_NUMBER	:= $(shell git rev-list HEAD | wc -l)
BUILD_TAG		?= non-jenkins-build
JENKINS_BUILD_TAG	:= $(shell echo jenkins-$(JOB_NAME)-$(BUILD_NUMBER) | sed -e 's/arch=[^,-]*,\?-\?//' -e 's/distro=[^,-]*,\?-\?//' -e 's,[/-],_,g')
SCM_DESCRIPTION		:= $(shell msg=$$(git log -n 1 --abbrev-commit); if echo "$$msg" | grep -q "^    Create-Tag:"; then echo "$$msg" | sed -ne '/^    Create-Tag:/s/RC[0-9]*//;s/^.*: *v//p';/^    Create-Tag:/s/P[0-9]*//; fi)
ifeq ($(strip $(SCM_DESCRIPTION)),)
SCM_DESCRIPTION		:= $(subst -,$(space),$(shell git describe --tags --match v[0-9]* | sed -e 's/^v//' -e 's/RC[0-9]*//' -e 's/P[0-9]*//'))
endif
ARCHIVE_NAME		:= Integrated Manager for Lustre Software
SHORT_ARCHIVE_NAME	:= python2-iml-manager
ARCHIVE_VERSION		:= $(word 1, $(SCM_DESCRIPTION))
PRODUCT_NAME		:= Integrated Manager for Lustre
SHORT_PRODUCT_NAME	:= iml

# Stable variable names exported to packaging and code
BUILD_NUMBER		:= $(SCM_COMMIT_NUMBER)
VERSION			:= $(subst $(space),-,$(SCM_DESCRIPTION))
PACKAGE_VERSION		:= $(word 1, $(SCM_DESCRIPTION))
PACKAGE_RELEASE		:= $(subst $(space),.,$(wordlist 2, 10, $(SCM_DESCRIPTION)))
ifeq ($(strip $(PACKAGE_RELEASE)),)
	IS_RELEASE := True
	# We use the build number in a package's release field in
	# order to distinguish between RCs with identical version fields.
	# e.g. 2.0.0.0-2983 (RC1), 2.0.0.0-2987 (RC2)
	# The important thing is that newer RCs must upgrade older ones,
	# and end-users only really care about the %{version} field.
	PACKAGE_RELEASE := $(BUILD_NUMBER)
else
	IS_RELEASE := False
	# In development, we embed the rest of the git describe output
	# in order to easily understand the provenance of a package.
	# The commits-since-tag number will ensure that newer packages
	# are preferred, since RPM's version parsing works left-to-right.
	PACKAGE_RELEASE := $(BUILD_NUMBER).$(PACKAGE_RELEASE).$(JENKINS_BUILD_TAG)

	# Display this in the UI to make ID easier in dev/test
	BUILD_NUMBER := $(JENKINS_BUILD_TAG)
endif

.ieel_version:
	@echo "${ARCHIVE_VERSION}"

.short_archive_name:
	@echo "${SHORT_ARCHIVE_NAME}"

.build_version:
	@echo "$(SCM_COMMIT_NUMBER)"."$(subst $(space),.,$(wordlist 2, 10, $(SCM_DESCRIPTION)))" | sed -e 's/..$$//'
