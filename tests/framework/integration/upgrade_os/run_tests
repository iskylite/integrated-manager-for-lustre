#!/bin/bash -ex

if [ "$slave" = "rhel6&&ssi" ]; then
    RHEL=true
else
    RHEL=false
fi

spacelist_to_commalist() {
    echo $@ | tr ' ' ','
}

[ -r localenv ] && . localenv

CLUSTER_CONFIG=${CLUSTER_CONFIG:-"$(ls $PWD/shared_storage_configuration_cluster_cfg.json)"}
CHROMA_DIR=${CHROMA_DIR:-"$PWD/integrated-manager-for-lustre/"}
USE_FENCE_XVM=false

eval $(python $CHROMA_DIR/tests/utils/json_cfg2sh.py "$CLUSTER_CONFIG")

TESTS=${TESTS:-"tests/integration/installation_and_upgrade"}

trap "set +e
echo 'Collecting reports...'

scp root@$TEST_RUNNER:~/test_report*.xml \"$PWD/test_reports/\"
" EXIT


echo "Create and exercise a filesystem..."

ssh root@$TEST_RUNNER "exec 2>&1; set -xe
cd /usr/share/chroma-manager/
unset http_proxy; unset https_proxy
./tests/integration/run_tests -f -c /root/cluster_cfg.json -x ~/test_report_pre_upgrade.xml $TESTS/../shared_storage_configuration/test_cluster_setup.py $TESTS/test_create_filesystem.py:TestCreateFilesystem.test_create"

. $CHROMA_DIR/tests/framework/integration/utils/upgrade_os.sh
if ! upgrade_os $TEST_DISTRO_NAME $UPGRADE_DISTRO_VERSION $(spacelist_to_commalist $CHROMA_MANAGER ${STORAGE_APPLIANCES[@]} ${WORKERS[@]}); then
    echo "Upgrade failed"
    exit 1
fi

echo "Test existing filesystem is still there and functional"

ssh root@$TEST_RUNNER "exec 2>&1; set -xe
cd /usr/share/chroma-manager/
unset http_proxy; unset https_proxy
./tests/integration/run_tests -f -c /root/cluster_cfg.json -x ~/test_report_post_upgrade.xml $TESTS/test_create_filesystem.py:TestExistsFilesystem.test_exists"

# Now reboot the storage servers
pdsh -l root -R ssh -S -w $(spacelist_to_commalist ${STORAGE_APPLIANCES[@]} ${WORKERS[@]}) "exec 2>&1; set -xe
sync
sync
init 6" | dshbak -c

# give them some time to start rebooting
sleep 30

$CHROMA_DIR/tests/framework/integration/utils/wait_for_nodes.sh "${STORAGE_APPLIANCES[*]} ${WORKERS[*]}"

echo "Test existing filesystem is STILL there and functional"

ssh root@$TEST_RUNNER "exec 2>&1; set -xe
cd /usr/share/chroma-manager/
unset http_proxy; unset https_proxy
./tests/integration/run_tests -f -c /root/cluster_cfg.json -x ~/test_report_post_upgrade.xml $TESTS/test_create_filesystem.py:TestExistsFilesystem.test_exists $TESTS/test_create_filesystem.py:TestAddHost.test_add_host"

# Now reboot the IML manager
pdsh -l root -R ssh -S -w $CHROMA_MANAGER "exec 2>&1; set -xe
sync
sync
init 6" | dshbak -c

# give it some time to start rebooting
sleep 30

$CHROMA_DIR/tests/framework/integration/utils/wait_for_nodes.sh "$CHROMA_MANAGER"

echo "Test existing filesystem is STILL there and functional"

ssh root@$TEST_RUNNER "exec 2>&1; set -xe
cd /usr/share/chroma-manager/
unset http_proxy; unset https_proxy
./tests/integration/run_tests -f -c /root/cluster_cfg.json -x ~/test_report_post_upgrade.xml $TESTS/test_create_filesystem.py:TestExistsFilesystem.test_exists"

echo "End running tests."
exit 0
