#!/bin/bash -ex

spacelist_to_commalist() {
    echo $@ | tr ' ' ','
}

[ -r localenv ] && . localenv

TEST_SPECIFIC_CLUSTER_CONFIG=${TEST_SPECIFIC_CLUSTER_CONFIG:-"$(ls $PWD/existing_filesystem_configuration_cluster_cfg.json)"}
CHROMA_DIR=${CHROMA_DIR:-"$PWD/integrated-manager-for-lustre/"}

eval $(python $CHROMA_DIR/tests/utils/json_cfg2sh.py "$CLUSTER_CONFIG")

echo "Beginning filesystem setup..."

scp $TEST_SPECIFIC_CLUSTER_CONFIG root@$TEST_RUNNER:/root/cluster_cfg.json

# Create a lustre filesystem outside of Chroma
ssh root@$TEST_RUNNER <<EOF
cd /usr/share/chroma-manager/
unset http_proxy; unset https_proxy

# When create_lustre_filesystem.py runs it will save the modified config file to a file of the same name and location as the source file so
# in the case below because the configuration file is /root/cluster_cfg.json it will save the result to /root/cluster_cfg_updated_configuration.json
./tests/integration/run_tests -f -c /root/cluster_cfg.json tests/integration/existing_filesystem_configuration/utils/create_lustre_filesystem.py
EOF

# Fetch the modified config file back from the test runner and overwrite the original.
scp root@$TEST_RUNNER:/root/cluster_cfg_updated_configuration.json $TEST_SPECIFIC_CLUSTER_CONFIG

echo "End filesystem setup."
